# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Flight {
  id: String!
  flyFrom: String!
  flyTo: String!
  cityFrom: String!
  cityTo: String!
  cityCodeFrom: String!
  cityCodeTo: String!
  utc_departure: String
  utc_arrival: String
  distance: Float!
  route: [Route!]!
  airlines: [String!]!
  price: Float!
}

type Route {
  id: String
  flyFrom: String
  flyTo: String
  cityFrom: String
  cityCodeFrom: String
  cityTo: String
  cityCodeTo: String
  airline: String
  flight_no: Int
  local_arrival: String
  utc_arrival: String
  local_departure: String
  utc_departure: String
}

type QueryObject {
  _id: ID!
  departure_ap: String!
  arrival_ap: String!
  departure_date: DateTime!
  arrival_date: DateTime
  adults: Int
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Trip {
  _id: ID!
  name: String!
  description: String!
  destinations: [Destination!]!
}

type Destination {
  _id: ID!
  city: String!
  arrival_date: DateTime!
  flight_associated: String
}

type User {
  email: String!
  emailverified: Boolean!
  createdAt: DateTime!
  udaptedAt: DateTime!
  savedFlights: [Flight!]!
  searchQueries: [QueryObject!]!
  userTrips: [Trip!]!
}

type Query {
  getAllFlights: [Flight!]!
  favourite_flights_by_user_find_all(email: String!): [Flight!]!
  getAllUsers: [User!]!
  query_history_find_all_of_user(email: String!): [QueryObject!]!
  query_create_and_user_addition(context: QueryCreateDto!, email: String): [Flight!]!
  automatize_queries(queries: [ID!]!): [Flight!]!
  trip_find_all_of_user(email: String!): [Trip!]!
}

input QueryCreateDto {
  departure_ap: String!
  arrival_ap: String!
  departure_date: DateTime!
  arrival_date: DateTime
  adults: Int
}

type Mutation {
  flight_create_and_user_addition(flightData: FlightCreateDto!, email: String!): Boolean!
  user_favourite_flight_delete(id: String!, email: String!): Boolean!
  user_history_query_delete(queryId: ID!, email: String!): Boolean!
  trip_create_and_user_addition(tripData: TripCreateDto!, email: String!): Boolean!
  trip_modify(tripData: TripModifyDto!, tripId: ID!): Boolean!
  user_trip_delete(tripId: ID!, email: String!): Boolean!
  user_trip_destination_delete(destinationId: ID!, tripId: ID!): Boolean!
}

input FlightCreateDto {
  id: String!
  flyFrom: String!
  flyTo: String!
  cityFrom: String!
  cityTo: String!
  cityCodeFrom: String!
  cityCodeTo: String!
  utc_departure: String
  utc_arrival: String
  distance: Float!
  route: [RouteCreateDTO!]!
  airlines: [String!]!
  price: Float!
}

input RouteCreateDTO {
  id: String
  flyFrom: String
  flyTo: String
  cityFrom: String
  cityCodeFrom: String
  cityTo: String
  cityCodeTo: String
  airline: String
  flight_no: Int
  local_arrival: String
  utc_arrival: String
  local_departure: String
  utc_departure: String
}

input TripCreateDto {
  name: String!
  description: String!
  destinations: [DestinationCreateDto!]
}

input DestinationCreateDto {
  _id: ID
  city: String!
  arrival_date: DateTime!
  flight_associated: String
}

input TripModifyDto {
  name: String
  description: String
  destinations: [DestinationModifyDto!]
}

input DestinationModifyDto {
  _id: ID
  city: String
  arrival_date: DateTime
  flight_associated: String
}
